name: Run unit tests
on:
  push:
    branches:
      - main

concurrency:
  cancel-in-progress: true
  group: unit-tests-${{ github.ref_name }}-${{ !(github.ref_protected) || github.sha
    }}
jobs:
  cpu-tests:
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - id: get-date
        name: Get year & week number
        run: 'echo "date=$(/bin/date "+%Y-%U")" >> $GITHUB_OUTPUT

          '
      - id: measurement-4
        name: Record Measurement After Get year & week number
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Get year & week number
          task: get-measurement
      - id: pip-cache
        name: Get pip cache dir
        run: 'pip install -U pip || python -m pip install -U pip

          echo "pip_cache=$(pip cache dir)" >> $GITHUB_OUTPUT

          '
      - id: measurement-6
        name: Record Measurement After Get pip cache dir
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Get pip cache dir
          task: get-measurement
      - uses: actions/cache@v3
        with:
          key: ${{ steps.get-date.outputs.date }}-pytorch-${{ runner.os }}-${{ matrix.python-version
            }}-${{ matrix.pytorch-channel }}-${{ hashFiles('requirements-dev.txt')
            }}
          path: '${{ steps.pip-cache.outputs.pip_cache }}

            '
          restore-keys: '${{ steps.get-date.outputs.date }}-pytorch-${{ runner.os
            }}-${{ matrix.python-version }}-${{ matrix.pytorch-channel }}-

            '
      - run: pip install pip wheel setuptools -Uqq
      - id: measurement-9
        name: Record Measurement After Step
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Step
          task: get-measurement
      - if: ${{ matrix.pytorch-channel == 'pytorch' }}
        name: Install PyTorch
        run: pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
      - id: measurement-11
        name: Record Measurement After Install PyTorch
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install PyTorch
          task: get-measurement
      - if: ${{ matrix.pytorch-channel == 'pytorch-nightly' }}
        name: Install PyTorch (nightly)
        run: pip install torch torchvision --index-url https://download.pytorch.org/whl/nightly/cpu
          --pre
      - id: measurement-13
        name: Record Measurement After Install PyTorch (nightly)
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install PyTorch (nightly)
          task: get-measurement
      - name: Install dependencies
        run: 'pip install -r requirements-dev.txt

          python setup.py install

          pip list

          '
      - id: measurement-15
        name: Record Measurement After Install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install dependencies
          task: get-measurement
      - name: Check code formatting
        run: 'bash ./tests/run_code_style.sh install

          bash ./tests/run_code_style.sh lint

          '
      - id: measurement-17
        name: Record Measurement After Check code formatting
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Check code formatting
          task: get-measurement
      - if: ${{ matrix.os == 'ubuntu-latest' && matrix.pytorch-channel == 'pytorch-nightly'}}
        name: Run Mypy
        run: 'bash ./tests/run_code_style.sh mypy

          '
      - id: measurement-19
        name: Record Measurement After Run Mypy
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run Mypy
          task: get-measurement
      - name: Download MNIST
        uses: pytorch-ignite/download-mnist-github-action@master
        with:
          target_dir: /tmp
      - name: Copy MNIST
        run: 'cp -R /tmp/MNIST .

          '
      - id: measurement-22
        name: Record Measurement After Copy MNIST
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Copy MNIST
          task: get-measurement
      - name: Run Tests
        uses: nick-fields/retry@v3
        with:
          command: SKIP_DISTRIB_TESTS=${{ matrix.skip-distrib-tests }} bash tests/run_cpu_tests.sh
          max_attempts: 5
          new_command_on_retry: USE_LAST_FAILED=1 SKIP_DISTRIB_TESTS=${{ matrix.skip-distrib-tests
            }} bash tests/run_cpu_tests.sh
          shell: bash
          timeout_minutes: 15
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
          file: ./coverage.xml
          flags: cpu
      - name: Run MNIST Examples
        run: '# MNIST

          # 1) mnist.py

          python examples/mnist/mnist.py --epochs=1

          '
      - id: measurement-26
        name: Record Measurement After Run MNIST Examples
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run MNIST Examples
          task: get-measurement
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Run MNIST with loggers Examples
        run: '# 2) mnist_with_visdom.py

          python -c "from visdom.server.build import download_scripts; download_scripts()"
          # download scripts : https://github.com/facebookresearch/visdom/blob/master/py/server.py#L929

          python -m visdom.server &

          sleep 10

          python examples/mnist/mnist_with_visdom.py --epochs=1

          kill %1

          # 3.1) mnist_with_tensorboard.py with tbX

          python examples/mnist/mnist_with_tensorboard.py --epochs=1

          # 3.2) mnist_with_tensorboard.py with native torch tb

          pip uninstall -y tensorboardX

          python examples/mnist/mnist_with_tensorboard.py --epochs=1

          '
      - id: measurement-28
        name: Record Measurement After Run MNIST with loggers Examples
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run MNIST with loggers Examples
          task: get-measurement
      - continue-on-error: true
        if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Run MNIST Example With Crash
        run: '# 4) mnist_save_resume_engine.py

          python examples/mnist/mnist_save_resume_engine.py --epochs=2 --crash_iteration
          1100

          '
      - id: measurement-30
        name: Record Measurement After Run MNIST Example With Crash
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run MNIST Example With Crash
          task: get-measurement
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Resume MNIST from previous crash
        run: 'python examples/mnist/mnist_save_resume_engine.py --epochs=2 --resume_from=/tmp/mnist_save_resume/checkpoint_1.pt

          '
      - id: measurement-32
        name: Record Measurement After Resume MNIST from previous crash
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Resume MNIST from previous crash
          task: get-measurement
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Run GAN example
        run: '# DCGAN

          python examples/gan/dcgan.py --dataset fake --dataroot /tmp/fakedata --output-dir
          /tmp/outputs-dcgan --batch-size 2 --epochs 2  --workers 0

          '
      - id: measurement-34
        name: Record Measurement After Run GAN example
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run GAN example
          task: get-measurement
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Run RL Examples
        run: '# RL

          # 1) Actor-Critic

          python examples/reinforcement_learning/actor_critic.py --max-episodes=2

          # 2) Reinforce

          python examples/reinforcement_learning/reinforce.py --max-episodes=2

          '
      - id: measurement-36
        name: Record Measurement After Run RL Examples
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run RL Examples
          task: get-measurement
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Run Neural Style Example
        run: '#fast-neural-style

          #train

          mkdir -p ~/.cache/torch/checkpoints/ && wget "https://download.pytorch.org/models/vgg16-397923af.pth"
          -O ~/.cache/torch/checkpoints/vgg16-397923af.pth

          python examples/fast_neural_style/neural_style.py train --epochs 1 --cuda
          0 --dataset test --dataroot . --image_size 32 --style_image examples/fast_neural_style/images/style_images/mosaic.jpg
          --style_size 32

          '
      - id: measurement-38
        name: Record Measurement After Run Neural Style Example
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run Neural Style Example
          task: get-measurement
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Run SR Example
        run: '# Super-Resolution

          python examples/super_resolution/main.py --upscale_factor 3 --crop_size
          180 --batch_size 4 --test_batch_size 100 --n_epochs 1 --lr 0.001 --threads
          2 --debug

          '
      - id: measurement-40
        name: Record Measurement After Run SR Example
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run SR Example
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${ steps.final-measurement.outputs.data-total-json }' > total_energy_consumption-1740223534.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption-1740223534.json
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            python-version: 3.11
            pytorch-channel: pytorch
            skip-distrib-tests: 1
          - os: macos-latest
            python-version: 3.11
            pytorch-channel: pytorch
            skip-distrib-tests: 1
        os:
          - ubuntu-latest
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
        pytorch-channel:
          - pytorch
          - pytorch-nightly
      max-parallel: 10
    timeout-minutes: 85
